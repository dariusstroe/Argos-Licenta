@page "/register"
@inject IAuthService AuthService

<style>
	.login-form {
		display: flex;
		flex-direction: column;
		align-items: center;
		justify-content: center;
		height: 100vh;
		background: linear-gradient(180deg, rgba(5, 39, 103, 0.7) 0%, rgba(58, 6, 71, 0.7) 70%);
		border-radius: 20px;
		padding: 20px;
	}

		.login-form .mb-3 {
			margin-bottom: 20px;
		}

	.login-button,
	.register-button {
		background: linear-gradient(180deg, rgba(5, 39, 103, 0.7) 0%, rgba(58, 6, 71, 0.7) 70%) !important;
	}

	.input-box {
		width: 300px !important;
	}

	.login-title,
	.register-title {
		margin-bottom: 30px;
		text-align: center;
		color: #fff;
		font-size: 28px;
		font-weight: bold;
	}

	.form-label {
		color: #fff;
		font-size: 18px;
	}
</style>

<PageTitle>Register</PageTitle>

<div class="login-form">
	<h3 class="login-title">Welcome!</h3>
	<EditForm Model="user" OnValidSubmit="HandleRegistration">
		<  />
		<div class="mb-3">
			<label for="email" class="form-label">Email</label>
			<InputText id="email" @bind-Value="user.Email" class="form-control input-box"></InputText>
			<ValidationMessage For="@(() => user.Email)" />
		</div>
		<div class="mb-3">
			<label for="password" class="form-label">Password</label>
			<InputText id="password" @bind-Value="user.Password" class="form-control input-box" type="password"></InputText>
			<ValidationMessage For="@(() => user.Password)" />
		</div>
		<div class="mb-3">
			<label for="confirmPassword" class="form-label">Confirm Password</label>
			<InputText id="confirmPassword" @bind-Value="user.ConfirmPassword" class="form-control input-box" type="password"></InputText>
			<ValidationMessage For="@(() => user.ConfirmPassword)" />
		</div>
		<button type="submit" class="btn btn-primary register-button">Register</button>
		<div class="@messageCssClass">
			<span>
				@message
			</span>
		</div>
	</EditForm>
</div>


@code {
	UserRegister user = new UserRegister();
	string message = string.Empty;
	string messageCssClass = string.Empty;

	async Task HandleRegistration()
	{
		var result = await AuthService.Register(user);
		message = result.Message;

		if (result.Success)
		{
			messageCssClass = "text-success";
		}
		else
		{
			messageCssClass = "text-danger";
		}
	}
}
