@page "/profile"
@inject IAuthService AuthService
@attribute [Authorize]

<div class="container">
    <div class="profile-header">
        <AuthorizeView>
            <h3 class="profile-greeting">Welcome, <span class="profile-username">@context.User.Identity.Name</span>!</h3>
        </AuthorizeView>
    </div>

    <div class="row">
        <div class="col-md-6">
            <div class="profile-section">
                <h5 class="profile-heading">Change Password</h5>

                <EditForm Model="request" OnValidSubmit="ChangePassword" class="profile-form">
                    <DataAnnotationsValidator></DataAnnotationsValidator>
                    <div class="form-group">
                        <label for="password">New Password</label>
                        <InputText id="password" @bind-Value="request.Password" class="form-control" type="password"></InputText>
                        <ValidationMessage For="@(() => request.Password)" class="profile-validation-message" />
                    </div>
                    <div class="form-group">
                        <label for="confirmPassowrd">Confirm Password</label>
                        <InputText id="confirmPassword" @bind-Value="request.ConfirmPassword" class="form-control" type="password"></InputText>
                        <ValidationMessage For="@(() => request.ConfirmPassword)" class="profile-validation-message" />
                    </div>
                    <div class="button-group">
                        <button type="submit" class="btn btn-primary profile-submit-button">Apply</button>
                    </div>
                </EditForm>

                @if (!string.IsNullOrEmpty(message))
                {
                        <div class="alert alert-info profile-message">@message</div>
                }
            </div>
        </div>

        <div class="col-md-6">
            <div class="profile-section">
                <h5 class="profile-heading">Delivery Information</h5>
                <AddressForm></AddressForm>
            </div>
        </div>
    </div>
</div>

@code {
	UserChangePassword request = new UserChangePassword();
	string message = string.Empty;

	private async Task ChangePassword()
	{
		var result = await AuthService.ChangePassword(request);
		message = result.Message;
	}
}
